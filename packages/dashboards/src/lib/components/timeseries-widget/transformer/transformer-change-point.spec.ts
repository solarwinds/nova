import { transformChangePoint } from "./transformer-change-point";
import { mockTimeSeriesData, mockTimeSeriesDataTest2 } from "./transformer.spec";

describe("perfstack.components.chart.series.transformer.TransformerChangePoint", () => {
    it("should apply change point to time series data", () => {
        const expectedTransformedDataY = [1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636, 1.5846363636363636];
        const actualTransformedDataY = transformChangePoint(mockTimeSeriesData, false).map(d => d.y);
        expect(actualTransformedDataY).toEqual(expectedTransformedDataY);
    });
});

describe("perfstack.components.chart.series.transformer.TransformerChangePoint", () => {
    it("should apply change point to time series data with a change point", () => {
        const expectedTransformedDataY = [1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 1.7280999999999995, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999, 9.149999999999999];
        const actualTransformedDataY = transformChangePoint(mockTimeSeriesDataTest2, false).map(d => d.y);
        expect(actualTransformedDataY).toEqual(expectedTransformedDataY);
    });
});
