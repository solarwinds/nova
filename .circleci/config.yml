version: 2.1
orbs:
    browser-tools: circleci/browser-tools@1.4.0

commands:
    reuse-cache:
        description: "Reuse cache among the builds"
        steps:
            - restore_cache:
                  key: deps-{{ checksum "yarn.lock" }}

executors:
    node:
        docker:
            - image: cimg/node:18.20
        working_directory: ~/nova

    node-browsers:
        docker:
            - image: cimg/node:18.20
        working_directory: ~/nova
    ubuntu:
        machine:
            image: ubuntu-2204:2022.10.2
        working_directory: ~/nova

jobs:
    prepare:
        executor: node
        environment:
            PROJECT_DIR: .
            BUILD_COUNTER: << pipeline.number >>
        steps:
            - checkout
            - restore_cache:
                  key: deps-{{ checksum "yarn.lock" }}
            - run:
                  working_directory: ~/nova
                  name: Installing node dependencies (if necessary)
                  command: |
                      if [ -d "node_modules" ];
                      then
                          echo "skipping npm install as it was restored from cache. Running only postinstall"
                      else
                          yarn install --frozen-lockfile
                      fi
            - save_cache:
                  key: deps-{{ checksum "yarn.lock" }}
                  paths:
                      - ./node_modules
            - run:
                  working_directory: ~/nova
                  name: Check styling
                  command: |
                      yarn prettier-check || true
                      EXIT_CODE=$?
                      echo "Exit Code: $EXIT_CODE"
                      if [ $EXIT_CODE -ne 0 ]; then
                        echo "Has styling issues but continuing..."
                      fi
                      # Exit with 0 to indicate success to CircleCI (override the failure)
                      exit 0
                  when: always

            - persist_to_workspace:
                  root: ~/nova
                  paths:
                      - .git
                      - packages
                      - scripts
                      - .editorconfig
                      - .eslintignore
                      - .eslintrc.json
                      - .prettierignore
                      - .prettierrc.js
                      - .prettierrc.json
                      - docker-compose.yml
                      - LICENSE
                      - package.json
                      - tsconfig.main.json
                      - yarn.lock
    bits-build:
        executor: node
        environment:
            PROJECT_DIR: ./packages/bits
            BUILD_COUNTER: << pipeline.number >>
        resource_class: medium+
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Compute build version
                  command: yarn run compute-version-ci
            - run:
                  name: Grab latest commit of package
                  command: |
                      export gitCommit=`git log --pretty=format:'%H' -n 1 $PROJECT_DIR`
                      echo $gitCommit > $PROJECT_DIR/git-commit
            - restore_cache:
                  key: bits-dist-{{ checksum "packages/bits/git-commit" }}
            - run:
                  working_directory: ~/nova/packages/bits
                  name: Assemble
                  command: |
                      if [ -d "dist" ];
                      then
                          echo "Skipping yarn assemble as it was restored from cache"
                          # this 'package-cached' file indicates that the dist folder was restored from cache
                          # we use it later to skip certain steps
                          touch package-cached
                      else
                          yarn run assemble
                      fi
            - save_cache:
                  key: bits-dist-{{ checksum "packages/bits/git-commit" }}
                  paths:
                      - ./packages/bits/dist
                      - ./packages/bits/sdk
            - persist_to_workspace:
                  root: ~/nova
                  paths:
                      - packages/bits
    bits-unit-test:
        executor: node-browsers
        working_directory: ~/nova
        steps:
            - browser-tools/install-chrome
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  working_directory: ~/nova/packages/bits
                  name: Unit tests
                  command: yarn run test
            - store_test_results:
                  path: packages/bits/test-results
    bits-e2e-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/bits
        steps:
            - browser-tools/install-chromedriver
            - browser-tools/install-chrome
            - attach_workspace:
                  at: ~/nova
            - run:
                  name: Check git diff to see if builds should skip e2e
                  command: |
                      if [ -f packages/bits/package-cached ]; then
                          echo "This package was restored from cache so we're skipping e2e tests"
                          circleci-agent step halt
                      fi
                      echo "not skiped"
            - reuse-cache
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: E2E tests
                  command: docker-compose run --user="$UID" build npm run e2e:ci --prefix ./packages/bits
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    bits-a11y-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/bits
        steps:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - attach_workspace:
                  at: ~/nova
            - run:
                  name: Check git diff to see if builds should skip e2e
                  working_directory: ~/nova/packages/bits
                  command: |
                      if [ -f $PROJECT_DIR/package-cached ]; then
                          echo "This package was restored from cache so we're skipping a11y tests"
                          circleci step halt
                      fi
            - reuse-cache
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: a11y tests
                  command: docker-compose run --user="$UID" build npm run a11y:ci --prefix ./packages/bits
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    bits-visual-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/bits
        steps:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - attach_workspace:
                  at: ~/nova
            - run:
                  name: Check git diff to see if builds should skip e2e
                  working_directory: ~/nova/packages/bits
                  command: |
                      if [ -f $PROJECT_DIR/package-cached ]; then
                          echo "This package was restored from cache so we're skipping visual tests"
                          circleci step halt
                      fi
            - restore_cache:
                  working_directory: ~/nova
                  key: deps-{{ checksum "yarn.lock" }}
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: Visual tests
                  command: |
                      export PERCY_TOKEN=${BITS_PERCY_TOKEN}
                      docker-compose run --user="$UID" build npm run percy:ci --prefix ./packages/bits
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    bits-pack:
        executor: node
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  working_directory: ~/nova/packages/bits
                  name: Create bits package
                  command: npm pack ./dist
            - persist_to_workspace:
                  root: ~/nova
                  paths:
                      - packages/bits/*.tgz
    bits-publish:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/bits
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Publish bits
                  command: |
                      yarn run publish-ci
    bits-verify:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/bits
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Verify published package
                  command: |
                      yarn run verify-ci

    charts-build:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/charts
            BUILD_COUNTER: << pipeline.number >>
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Compute build version
                  command: yarn run compute-version-ci
            - run:
                  working_directory: ~/nova/packages
                  name: Grab latest commit of package
                  command: |
                      export bitsCommit=`git log --pretty=format:'%H' -n 1 ./bits`
                      export chartsCommit=`git log --pretty=format:'%H' -n 1 ./charts`
                      echo $bitsCommit $chartsCommit > ./charts/git-commit
            - run:
                  working_directory: ~/nova
                  name: Install Bits
                  command: |
                      yarn run --cwd=packages/charts symlink
            - restore_cache:
                  working_directory: ~/nova
                  key: charts-dist-{{ checksum "packages/charts/git-commit" }}
            - run:
                  working_directory: ~/nova/packages/charts
                  name: Assemble
                  command: |
                      if [ -d "dist" ];
                      then
                          echo "skipping yarn assemble as it was restored from cache"
                          touch package-cached
                      else
                          yarn run assemble
                      fi
            - save_cache:
                  key: charts-dist-{{ checksum "packages/charts/git-commit" }}
                  paths:
                      - ./packages/charts/dist
                      - ./packages/charts/sdk
            - persist_to_workspace:
                  root: ~/nova
                  paths:
                      - packages/charts
    charts-unit-test:
        executor: node-browsers
        working_directory: ~/nova
        environment:
            # Needed for daylight saving time tests
            TZ: "America/Chicago"
        steps:
            - browser-tools/install-chrome
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  working_directory: ~/nova/packages/charts
                  name: Unit tests
                  command: yarn run test
            - store_test_results:
                  path: packages/charts/test-results
    charts-e2e-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/charts
        steps:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - attach_workspace:
                  at: ~/nova
            - run:
                  name: Check git diff to see if builds should skip e2e
                  working_directory: ~/nova/packages/charts
                  command: |
                      if [ -f $PROJECT_DIR/package-cached ]; then
                          echo "This package was restored from cache so we're skipping visual tests"
                          circleci step halt
                      fi
            - reuse-cache
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: E2E tests
                  command: docker-compose run --user="$UID" build npm run e2e:ci --prefix ./packages/charts
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    charts-visual-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/charts
        steps:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - attach_workspace:
                  at: ~/nova
            - run:
                  name: Check git diff to see if builds should skip e2e
                  working_directory: ~/nova/packages/charts
                  command: |
                      if [ -f $PROJECT_DIR/package-cached ]; then
                          echo "This package was restored from cache so we're skipping visual tests"
                          circleci step halt
                      fi
            - reuse-cache
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: Visual tests
                  command: |
                      export PERCY_TOKEN=${CHARTS_PERCY_TOKEN}
                      docker-compose run --user="$UID" build npm run percy:ci --prefix ./packages/charts
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    charts-pack:
        executor: node
        working_directory: ~/nova
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  working_directory: ~/nova/packages/charts
                  name: Create charts package
                  command: npm pack ./dist
            - persist_to_workspace:
                  root: ~/nova
                  paths:
                      - packages/charts/*.tgz
    charts-publish:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/charts
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Publish charts
                  command: |
                      yarn run publish-ci
    charts-verify:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/charts
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Verify published package
                  command: |
                      yarn run verify-ci

    dashboards-build:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/dashboards
            BUILD_COUNTER: << pipeline.number >>
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Compute build version
                  command: yarn run compute-version-ci
            - run:
                  working_directory: ~/nova/packages
                  name: Grab latest commit of package
                  command: |
                      export bitsCommit=`git log --pretty=format:'%H' -n 1 ./bits`
                      export chartsCommit=`git log --pretty=format:'%H' -n 1 ./charts`
                      export dashboardsCommit=`git log --pretty=format:'%H' -n 1 ./dashboards`
                      echo $bitsCommit $chartsCommit $dashboardsCommit > ./dashboards/git-commit
            - run:
                  working_directory: ~/nova/packages/dashboards
                  name: Install Bits and Charts
                  command: |
                      yarn run --cwd=packages/dashboards symlink
            - restore_cache:
                  working_directory: ~/nova
                  key: dashboards-dist-{{ checksum "packages/dashboards/git-commit" }}
            - run:
                  working_directory: ~/nova/packages/dashboards
                  name: Assemble
                  command: |
                      if [ -d "dist" ];
                      then
                          echo "skipping yarn assemble as it was restored from cache"
                          touch package-cached
                      else
                          yarn run assemble
                      fi
            - save_cache:
                  key: dashboards-dist-{{ checksum "packages/dashboards/git-commit" }}
                  paths:
                      - ./packages/dashboards/dist
                      - ./packages/dashboards/sdk
            - persist_to_workspace:
                  root: .
                  paths:
                      - packages/dashboards
    dashboards-unit-test:
        executor: node-browsers
        working_directory: ~/nova
        steps:
            - browser-tools/install-chrome
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  working_directory: ~/nova/packages/dashboards
                  name: Unit tests
                  command: yarn run test
            - store_test_results:
                  path: packages/dashboards/test-results

    dashboards-e2e-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/dashboards
        steps:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Check git diff to see if builds should skip e2e
                  working_directory: ~/nova/packages/dashboards
                  command: |
                      if [ -f package-cached ]; then
                          echo "This package was restored from cache so we're skipping e2e tests"
                          circleci step halt
                      fi
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: E2E tests
                  command: docker-compose run --user="$UID" build npm run e2e:ci --prefix ./packages/dashboards
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    dashboards-visual-test:
        executor: ubuntu
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ~/nova/packages/dashboards
        steps:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Start Selenium docker image
                  command: docker-compose up -d --build selenium
            - run:
                  name: Visual tests
                  command: |
                      export PERCY_TOKEN=${DASHBOARDS_PERCY_TOKEN}
                      docker-compose run --user="$UID" build npm run percy:ci --prefix ./packages/dashboards
            - run:
                  name: Cleanup
                  command: docker-compose down -v --rmi=local
    dashboards-pack:
        executor: node
        working_directory: ~/nova
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  working_directory: ~/nova/packages/dashboards
                  name: Create dashboards package
                  command: npm pack ./dist
            - persist_to_workspace:
                  root: ~/nova
                  paths:
                      - packages/dashboards/*.tgz
    dashboards-publish:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/dashboards
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Publish dashboards
                  command: |
                      yarn run publish-ci
    dashboards-verify:
        executor: node
        working_directory: ~/nova
        environment:
            PROJECT_DIR: ./packages/dashboards
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - run:
                  name: Verify published package
                  command: |
                      yarn run verify-ci
    nova-docs:
        executor: node
        working_directory: ~/nova
        environment:
            NOVA_DIR: ~/nova
        steps:
            - attach_workspace:
                  at: ~/nova
            - reuse-cache
            - add_ssh_keys
            - checkout:
                  path: ~/nova
            - run:
                  name: Configure Git
                  command: |
                      git config --global user.email circleci@circleci
                      git config --global user.name $CIRCLE_PROJECT_USERNAME
            - run:
                  name: Publish nova docs & Prepare nova-docs artifact
                  command: yarn run deploy-docs-ci
            - store_artifacts:
                  path: ./nova-docs.zip
    nova-docs-cleanup:
        executor: node
        working_directory: ~/nova
        environment:
            NOVA_DIR: ~/nova
        steps:
            - add_ssh_keys
            - checkout:
                  path: ~/nova
            - run:
                  name: Configure Git
                  command: |
                      git config --global user.email circleci@circleci
                      git config --global user.name $CIRCLE_PROJECT_USERNAME
            - run:
                  name: Docs Cleanup
                  command: yarn run clean-docs-ci
    release-prep:
        executor: node
        working_directory: ~/nova
        environment:
            SOURCE_BRANCH: main
            CREATE_RELEASE_BRANCH: "true"
            RELEASE_BRANCH: release/v16.0.x
            INCREMENT_TYPE: patch
        steps:
            - add_ssh_keys
            - checkout:
                  path: ~/nova
            - reuse-cache
            - run:
                  name: Configure Git
                  command: |
                      git config --global user.email circleci@circleci
                      git config --global user.name $CIRCLE_PROJECT_USERNAME
            - run:
                  name: Run release prep
                  command: yarn run release-prep-ci
workflows:
    nova:
        jobs:
            - prepare
            - bits-build:
                  requires:
                      - prepare
            - bits-pack:
                  requires:
                      - bits-build
            - bits-unit-test:
                  requires:
                      - bits-build
            - bits-e2e-test:
                  requires:
                      - bits-build
            - bits-visual-test:
                  requires:
                      - bits-build
            - bits-a11y-test:
                  requires:
                      - bits-build
            - bits-publish:
                  requires:
                      - bits-e2e-test
                      - bits-unit-test
                      - charts-e2e-test
                      - charts-unit-test
                      - dashboards-e2e-test
                      - dashboards-unit-test
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/
            - bits-verify:
                  requires:
                      - bits-publish
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/
            - charts-build:
                  requires:
                      - bits-pack
            - charts-pack:
                  requires:
                      - charts-build
            - charts-unit-test:
                  requires:
                      - charts-build
            - charts-e2e-test:
                  requires:
                      - charts-build
            - charts-visual-test:
                  requires:
                      - charts-build
            - charts-publish:
                  requires:
                      - bits-e2e-test
                      - bits-unit-test
                      - charts-e2e-test
                      - charts-unit-test
                      - dashboards-e2e-test
                      - dashboards-unit-test
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/
            - charts-verify:
                  requires:
                      - charts-publish
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/
            - dashboards-build:
                  requires:
                      - charts-pack
            - dashboards-pack:
                  requires:
                      - dashboards-build
            - nova-docs:
                  context:
                      - common-build-creds
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/
                  requires:
                      - bits-pack
                      - charts-pack
                      - dashboards-pack
            - nova-docs-cleanup:
                  context: common-build-creds
                  requires:
                      - nova-docs
                  filters:
                      branches:
                          only:
                              - /^cci\/.+/
            - dashboards-unit-test:
                  requires:
                      - dashboards-build
            - dashboards-e2e-test:
                  requires:
                      - dashboards-build
            - dashboards-visual-test:
                  requires:
                      - dashboards-build
            - dashboards-publish:
                  requires:
                      - bits-e2e-test
                      - bits-unit-test
                      - charts-e2e-test
                      - charts-unit-test
                      - dashboards-e2e-test
                      - dashboards-unit-test
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/
            - dashboards-verify:
                  requires:
                      - dashboards-publish
                  filters:
                      branches:
                          only:
                              - /^release\/.+/
                              - /^cci\/.+/

    nova-release:
        jobs:
            - release-approval:
                  type: approval
                  filters:
                      branches:
                          only:
                              - main
                              - /^hotfix\/v[\d.]+x/
                              - /^cci-release\/.*/
            - release-prep:
                  context: github-write-access
                  requires:
                      - release-approval

    nightly:
        triggers:
            - schedule:
                  cron: "0 0 * * *"
                  filters:
                      branches:
                          only:
                              - main
        jobs:
            - nova-docs-cleanup:
                  context:
                      - common-build-creds
